{"version":3,"sources":["components/birthdaysBlock/BirthdayBlockContainer.module.css","components/radiobuttonsContainer/RadioButtonsContainer.module.css","components/employeesBlock/EmployeesBlockContainer.module.css","components/employeesListBlock/EmployeesListBlock.module.css","pages/EmployessPage/EmployeesPage.module.css","components/pageHeader/Header.module.css","store/actions/employeesThunk.ts","store/reducers/employeesThunk.ts","store/store.tsx","Root.tsx","helpers/converter.ts","components/BirthdayBlockItem/BirthdayBlockItem.tsx","helpers/month.ts","components/birthdaysBlock/BirthdayBlockContainer.tsx","components/radiobuttonsContainer/RadioButtonsContainer.tsx","components/employeesListBlock/EmployeesListBlock.tsx","components/employeesBlock/EmployeesBlockContainer.tsx","components/pageHeader/Header.tsx","pages/EmployessPage/EmployeesPage.tsx","App.tsx","index.tsx"],"names":["module","exports","fetchEmployees","createAsyncThunk","a","fetch","request","json","payload","console","log","window","alert","employeesSlice","createSlice","name","initialState","allEmployees","selectedEmployees","reducers","selectEmployee","state","action","employeeSelected","some","employee","id","filter","extraReducers","builder","addCase","fulfilled","actions","store","configureStore","reducer","employees","employeesReducer","Root","children","convertDates","date","fullDate","Date","day","getDate","month","getMonth","year","getFullYear","BirthdayBlockItem","className","classes","container","map","firstName","lastName","dob","months","BirthdayBlockContainer","useSelector","monthsSorted","slice","length","i","empty","RadioButtonsContainer","dispatch","handleChange","useDispatch","useState","active","setActive","onValueChange","event","type","value","checked","onChange","EmployeesListBlock","letter","toUpperCase","EmployeesBlockContainer","useEffect","alphabet","Array","from","e","x","String","fromCharCode","trim","startsWith","sort","b","localeCompare","Header","EmployeesPage","main","App","path","element","to","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.367796d8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"BirthdayBlockContainer_container__FI47K\",\"empty\":\"BirthdayBlockContainer_empty__2znrI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RadioButtonsContainer_container__3qM-T\",\"active\":\"RadioButtonsContainer_active__1pyeB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmployeesBlockContainer_container__TJPwE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"EmployeesListBlock_container__10Dsm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"EmployeesPage_main__24XGT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2e0_t\"};","import { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchEmployees = createAsyncThunk(\"employees/fetch\", async () => {\r\n  try {\r\n    const request = await fetch(\r\n      \"https://yalantis-react-school-api.yalantis.com/api/task0/users\"\r\n    );\r\n    const payload = await request.json();\r\n    console.log(payload);\r\n    return payload;\r\n \r\n  } catch {\r\n    window.alert(\"Failed to fetch products\");\r\n  }\r\n});\r\n\r\nfetchEmployees();\r\n","import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport type { RootState } from \"../store\";\r\nimport { EmployeesState } from \"../types/employeesState\";\r\nimport Employee from \"../../interfaces/EmployeeModel\";\r\nimport { fetchEmployees } from \"../actions/employeesThunk\";\r\n\r\nconst initialState: EmployeesState = {\r\n  allEmployees: [],\r\n  selectedEmployees: [],\r\n};\r\n\r\nexport const employeesSlice = createSlice({\r\n  name: \"products\",\r\n  initialState,\r\n  reducers: {\r\n    selectEmployee(state, action: PayloadAction<Employee>) {\r\n      const employeeSelected = state.selectedEmployees.some(\r\n        (employee) => employee.id === action.payload.id\r\n      );\r\n      state.selectedEmployees = employeeSelected\r\n        ? state.selectedEmployees.filter(\r\n            (employee) => employee.id !== action.payload.id\r\n          )\r\n        : (state.selectedEmployees = [\r\n            ...state.selectedEmployees,\r\n            action.payload,\r\n          ]);\r\n      console.log(state.selectedEmployees);\r\n    },\r\n  },\r\n\r\n  extraReducers: (builder) => {\r\n    builder.addCase(fetchEmployees.fulfilled, (state, action) => {\r\n      state.allEmployees = [...action.payload];\r\n    });\r\n    //   const categories = new Set<string>();\r\n    //   const farms = new Set<string>();\r\n    //   const prices: number[] = [];\r\n    //   state.visibleProducts.forEach((product) => {\r\n    //     product.categories.forEach((category) => categories.add(category));\r\n    //     farms.add(product.farm);\r\n    //     prices.push(product.price);\r\n    //   });\r\n    //   state.productCategories = Array.from(categories.values());\r\n    //   state.farms = Array.from(farms.values());\r\n    //   state.minPrice = Math.min(...prices);\r\n    //   state.maxPrice = Math.max(...prices);\r\n    //   state.numberOfProducts = state.visibleProducts.length;\r\n    //   state.numberOfPages = Math.ceil(\r\n    //     state.numberOfProducts / state.productsPerPage\r\n    //   );\r\n    //   state.items = state.allProducts.slice(0, state.productsPerPage);\r\n    //   state.productsFetched = true;\r\n    // });\r\n  },\r\n});\r\n\r\nexport const { selectEmployee } = employeesSlice.actions;\r\nexport const selectCount = (state: RootState) => state.employees;\r\n\r\nexport default employeesSlice.reducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport employeesReducer from \"./reducers/employeesThunk\";\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    employees: employeesReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\n","import React from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { store } from \"./store/store\";\r\n\r\nconst Root: React.FC = ({ children }) => {\r\n  return (\r\n    <Provider store={store}>\r\n      {/* <Router basename=\"/globallogic-js-basecamp-2021/react/04-redux/build\"> */}\r\n      <Router>{children}</Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default Root;\r\n","export const convertDates = (date: string) => {\r\n  const months = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  const fullDate = new Date(date);\r\n  const day = fullDate.getDate();\r\n  const month = months[fullDate.getMonth()];\r\n  const year = fullDate.getFullYear();\r\n\r\n  return `${day} ${month}, ${year} year.`;\r\n};\r\n","import Employee from \"../../interfaces/EmployeeModel\";\r\nimport { convertDates } from \"../../helpers/converter\";\r\nimport classes from \"./BirthdayBlockItem.module.css\";\r\n\r\ninterface BirthdayBlockItemProps {\r\n  employees: Employee[];\r\n}\r\n\r\nconst BirthdayBlockItem: React.FC<BirthdayBlockItemProps> = ({ employees }) => {\r\n  return (\r\n    <ul className={classes.container}>\r\n      {employees.map((employee) => (\r\n        <li key={employee.id + \"selected\"}>\r\n          {employee.firstName} {employee.lastName} -{\" \"}\r\n          {convertDates(employee.dob)}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default BirthdayBlockItem;\r\n","export const months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\n","import classes from \"./BirthdayBlockContainer.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/store\";\r\nimport BirthdayBlockItem from \"../BirthdayBlockItem/BirthdayBlockItem\";\r\nimport { months } from \"../../helpers/month\";\r\n\r\nconst BirthdayBlockContainer: React.FC = () => {\r\n  const selectedEmployees = useSelector(\r\n    (state: RootState) => state.employees.selectedEmployees\r\n  );\r\n\r\n  const currentMonthIndex = 10;\r\n\r\n  const monthsSorted = [\r\n    ...months.slice(currentMonthIndex),\r\n    ...months.slice(0, currentMonthIndex),\r\n  ];\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {selectedEmployees.length !== 0 ? (\r\n        monthsSorted.map((month, i) => (\r\n          <div key={\"month\" + month}>\r\n            <h6>{month}</h6>\r\n            <BirthdayBlockItem\r\n              employees={selectedEmployees.filter(\r\n                (employee) =>\r\n                  months[new Date(employee.dob).getMonth()] === month\r\n              )}\r\n            />\r\n          </div>\r\n        ))\r\n      ) : (\r\n        <div className={classes.empty}> Employees List is empty </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BirthdayBlockContainer;\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { RootState } from \"../../store/store\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { selectEmployee } from \"../../store/reducers/employeesThunk\";\r\nimport Employee from \"../../interfaces/EmployeeModel\";\r\nimport classes from \"./RadioButtonsContainer.module.css\";\r\n\r\ninterface RadioButtonsContainerProps {\r\n  employee: Employee;\r\n  handleChange: () => void;\r\n}\r\n\r\nconst RadioButtonsContainer: React.FC<RadioButtonsContainerProps> = ({\r\n  employee,\r\n  handleChange,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const selectedEmployees = useSelector(\r\n    (state: RootState) => state.employees.selectedEmployees\r\n  );\r\n\r\n  const [active, setActive] = useState(false);\r\n\r\n  const onValueChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setActive(!active);\r\n    dispatch(selectEmployee(employee));\r\n  };\r\n\r\n  console.log(active);\r\n\r\n  return (\r\n    <form className={classes.container}>\r\n      <h5 className={active ? classes.active : \"\"}>\r\n        {employee.firstName} {employee.lastName}\r\n      </h5>\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"false\"\r\n            checked={!active}\r\n            onChange={onValueChange}\r\n          />\r\n          not active\r\n        </label>\r\n      </div>\r\n\r\n      <div className=\"radio\">\r\n        <label>\r\n          <input\r\n            type=\"radio\"\r\n            value=\"true\"\r\n            checked={active}\r\n            onChange={onValueChange}\r\n          />\r\n          active\r\n        </label>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default RadioButtonsContainer;\r\n","import Employee from \"../../interfaces/EmployeeModel\";\r\nimport RadioButtonsContainer from \"../radiobuttonsContainer/RadioButtonsContainer\";\r\nimport classes from \"./EmployeesListBlock.module.css\";\r\n\r\ninterface EmployeesListBlock {\r\n  letter: string;\r\n  employees: Employee[];\r\n}\r\nconst EmployeesListBlock: React.FC<EmployeesListBlock> = ({\r\n  letter,\r\n  employees,\r\n}) => {\r\n  return (\r\n    <div className={classes.container}>\r\n      <h4>{letter.toUpperCase()}</h4>\r\n      {employees.length > 0\r\n        ? employees.map((employee) => (\r\n            <RadioButtonsContainer\r\n              key={employee.id + \"radioButtonContainer\"}\r\n              handleChange={() => console.log(\"do sth\")}\r\n              employee={employee}\r\n            />\r\n          ))\r\n        : \"No employees\"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesListBlock;\r\n","import classes from \"./EmployeesBlockContainer.module.css\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { fetchEmployees } from \"../../store/actions/employeesThunk\";\r\nimport { useSelector } from \"react-redux\";\r\nimport EmployeesListBlock from \"../employeesListBlock/EmployeesListBlock\";\r\nimport { RootState } from \"../../store/store\";\r\n\r\nconst EmployeesBlockContainer: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmployees());\r\n  }, [dispatch]);\r\n\r\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n  const employees = useSelector(\r\n    (state: RootState) => state.employees.allEmployees\r\n  );\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {alphabet.map((letter) => (\r\n        <EmployeesListBlock\r\n          key={\"letter\" + letter}\r\n          letter={letter}\r\n          employees={employees\r\n            .filter((employee) => employee.firstName.trim().startsWith(letter))\r\n            .sort((a, b) => a.firstName.localeCompare(b.firstName))}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeesBlockContainer;\r\n","import classes from \"./Header.module.css\";\r\n\r\nconst Header: React.FC = () => {\r\n  const alpha = Array.from(Array(26)).map((e, i) => i + 65);\r\n  const alphabet = alpha.map((x) => String.fromCharCode(x));\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <h2>Employees</h2>\r\n      <h2>Employees birthday</h2>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import BirthdayBlockContainer from \"../../components/birthdaysBlock/BirthdayBlockContainer\";\r\nimport EmployeesBlockContainer from \"../../components/employeesBlock/EmployeesBlockContainer\";\r\nimport classes from \"./EmployeesPage.module.css\";\r\nimport Header from \"../../components/pageHeader/Header\";\r\n\r\nconst EmployeesPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className={classes.main}>\r\n        <EmployeesBlockContainer />\r\n        <BirthdayBlockContainer />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmployeesPage;\r\n","import EmployeesPage from \"./pages/EmployessPage/EmployeesPage\";\nimport { Routes, Route, Navigate } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Routes>\n      <Route path=\"/\" element={<Navigate to=\"/employees\" />} />\n      <Route path=\"/employees\" element={<EmployeesPage />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Root from \"./Root\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <Root>\n    <App />\n  </Root>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}